@prefix : <http://lig-tdcge.imag.fr/steamer/covikoa/derivation#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix term: <http://purl.org/dc/terms/> .
@prefix vann: <http://purl.org/vocab/vann/> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix gviz: <http://lig-tdcge.imag.fr/steamer/covikoa/geoviz#> .
@prefix symb: <https://gis.lu.se/ont/data_portrayal/symbol#> .
@prefix symblzr: <https://gis.lu.se/ont/data_portrayal/symbolizer#> .
@prefix scale: <https://gis.lu.se/ont/visualisation_scale#> .
@base <http://lig-tdcge.imag.fr/steamer/covikoa/derivation#> .


<http://example.com/covikoa-derivation> a owl:Ontology ;
                                        term:creator "Matthieu Viry" ;
                                        term:license "http://creativecommons.org/licenses/by-nc-sa/4.0/"^^term:URI ;
                                        term:issued "2020-09-30"^^xsd:date ;
                                        owl:versionInfo "0.1.0" ;
                                        vann:preferredNamespacePrefix "cvkr" ;
                                        vann:preferredNamespaceUri "http://lig-tdcge.imag.fr/steamer/covikoa/derivation#"^^xsd:string ;
                                        rdfs:comment """ The CoViKoa-derivation ontology is used to describe how a geovisualisation should be constructed from an existing model (in a specification document, called the Derivation Model, written in RDF)."""@en .

#################################################################
#    Annotation properties
#################################################################

###  http://purl.org/dc/terms/creator
<http://purl.org/dc/terms/creator> rdf:type owl:AnnotationProperty .


###  http://purl.org/dc/terms/issued
<http://purl.org/dc/terms/issued> rdf:type owl:AnnotationProperty .


###  http://purl.org/dc/terms/license
<http://purl.org/dc/terms/license> rdf:type owl:AnnotationProperty .


###  http://purl.org/vocab/vann/preferredNamespacePrefix
<http://purl.org/vocab/vann/preferredNamespacePrefix> rdf:type owl:AnnotationProperty .


###  http://purl.org/vocab/vann/preferredNamespaceUri
<http://purl.org/vocab/vann/preferredNamespaceUri> rdf:type owl:AnnotationProperty .


#################################################################
#    Classes
#################################################################

:EnrichmentRule a owl:Class ;
    rdfs:subClassOf prov:SoftwareAgent ;
    rdfs:label "Enrichment Rule"@en, "Regle d'enrichissement"@fr ;
    rdfs:comment """
        Describes a SHACL-AF rule for generating new triplets that can be executed for each change made to the Intermediate Representations
        of the Semantic Data Model.
        This kind of rule is not written by the user but instances of its subclasses (DefaultEnrichmentRule and ProblemSpecificEnrichmentRule)
        are generated by the system, from the Derivation Model."""@en .

:DefaultEnrichmentRule a owl:Class ;
    rdfs:subClassOf :EnrichmentRule ;
    rdfs:label "Default Enrichment Rule"@en, "Regle d'enrichissement par defaut"@fr  .

:ProblemSpecificEnrichmentRule a owl:Class ;
    rdfs:subClassOf :EnrichmentRule ;
    rdfs:label "Problem Specific Enrichment Rule"@en, "Regle d'enrichissement relative e une problematique particuliere"@fr  .

:DerivationRule a owl:Class ;
    rdfs:subClassOf prov:SoftwareAgent ;
    rdfs:label "Derivation Rule"@en, "Regle de derivation"@fr ;
    rdfs:comment """
        Describes a SHACL-AF rule allowing to derive, from the Semantic Data Model and its Derivation Model,
        the Intermediate Representations of the concepts mobilized in the Semantic Data Model.
        This rule is not written by the user but generated by the system, from the Derivation Model."""@en .

:DataIntegrationRule a owl:Class ;
    rdfs:subClassOf prov:SoftwareAgent ;
    rdfs:label "Data Integration Rule"@en, "Regle d'integration de donnees"@fr ;
    rdfs:comment """
        Describe a sh:NodeShape containing a sh:Rule (from SHACL-AF) allowing to
        integrate new individuals, for example upon a federated SPARQL query."""@en .


:RuleExecution a owl:Class ;
    rdfs:subClassOf prov:Activity ;
    rdfs:label "RuleExecution"@en ;
    rdfs:comment """The activity, conducted by the DerivationRules and by the EnrichmentRules leading
                  respectively to the derivation of intermediate representations and to the suggestion of portrayals."""@en .

:MatchingPattern a owl:Class ;
    rdfs:label "Matching Pattern"@en, "Motif correspondant"@fr ;
    rdfs:comment """Desribe a matching pattern, qualified by a patternProperty or by a patternPropertyChain
    which is the property or the sequence of property to be followed to read ..."""@en .

:ConditionFilter a owl:Class ;
    rdfs:label "Condition Filter"@en, "Filtre conditionnel"@fr ;
    rdfs:comment """
    Describe a conditionnal filter, which has a name (rdfs:label) and a value (rdf:value),
    whose value is a SPARQL query used to pull some interesting individuals from the targeted semantic data model.

    This property is intended to be used when writing the Derivation Model (on new classes that subclass gviz:GeoVisualIntermediateRepresentation).

    The query contained in the value (rdf:value) of this ConditionFilter is expected to be a SELECT query returning distinct individuals,
    bound to the '?somethingRepresentable' variable name.
    Additional prefixes used in the query can be defined when defining the Derivation Model so they will be injected each time a ConditionFilter
    is used during the rule generation.
    """@en .

:CoViKoaGeneration a owl:Class ;
    rdfs:subClassOf prov:Generation ;
    rdfs:label "CoViKoaGeneration"@en ;
    rdfs:comment """
    This class is only used internaly by CoViKoa (see org/me/CoViKoa/CoViKoaHandler.java)
    and should not be used directly when writing the Derivation Model."""@en .


:PrefixToInject a owl:Class ;
    rdfs:comment """
    This class is only used internaly by CoViKoa (individual of this type is created in the file org/me/CoViKoa/RulesGenerator.java)
    to store the prefix to inject in the rule containing a ConditionFilter.
    It should not be used directly when writing the Derivation Model."""@en .

:RuleExecutionMarker a owl:Class ;
    rdfs:comment """
    This class is only used internaly by CoViKoa (see org/me/CoViKoa/CoViKoaHandler.java)
    and should not be used directly when writing the Derivation Model."""@en .


###  http://www.w3.org/ns/prov#Activity
<http://www.w3.org/ns/prov#Activity> rdf:type owl:Class .


###  http://www.w3.org/ns/prov#Generation
<http://www.w3.org/ns/prov#Generation> rdf:type owl:Class .


###  http://www.w3.org/ns/prov#SoftwareAgent
<http://www.w3.org/ns/prov#SoftwareAgent> rdf:type owl:Class .


###  https://gis.lu.se/ont/data_portrayal/symbol#Symbol
<https://gis.lu.se/ont/data_portrayal/symbol#Symbol> rdf:type owl:Class .


###  https://gis.lu.se/ont/data_portrayal/symbolizer#Symbolizer
<https://gis.lu.se/ont/data_portrayal/symbolizer#Symbolizer> rdf:type owl:Class .

###  https://gis.lu.se/ont/visualisation_scale#Scale
<https://gis.lu.se/ont/visualisation_scale#Scale> rdf:type owl:Class .

#################################################################
#    Object Properties
#################################################################

:hasEnrichmentRule a owl:ObjectProperty ;
    rdfs:label "has Enrichment Rule"@en, "a Regle d'Enrichissement"@fr ;
    rdfs:range :EnrichmentRule .

:hasDerivationRule a owl:ObjectProperty ;
    rdfs:label "has Derivation Rule"@en, "a Regle de Derivation"@fr ;
    rdfs:range :DerivationRule .

:hasDataIntegrationRule a owl:ObjectProperty ;
    rdfs:label "has Data Integration Rule"@en, "a Regle d'integration de donnees"@fr ;
    rdfs:range :DataIntegrationRule ;
    rdfs:comment """
    This is how we define a DataIntegrationRule on a subclass of gviz:GeoVisualIntermediateRepresentation in the Derivation Model."""@en .

:hasMatchingPattern a owl:ObjectProperty ;
    rdfs:domain symb:Symbol ;
    rdfs:range :MatchingPattern ;
    rdfs:label "has Matching Pattern"@en, "a motif correspondant"@fr ;
    rdfs:comment """
    Allows to describe a MatchingPattern to be used for a Symbol.
    This then allows the different symbolizers to define a PatternObject (qualified by a patternProperty or by a patternPropertyChain :
    this is the value for which they will be used to create the appropriate graphical representation."""@en .

:patternObject a owl:ObjectProperty ;
    rdfs:domain symblzr:Symbolizer ;
    rdfs:range owl:Class ;
    rdfs:comment """
    Describes the target object to be matched on some property,
    defined by the cvkr:MatchingPattern of the symbol referring to this symboliser."""@en .

:patternProperty a owl:ObjectProperty ;
    rdfs:domain :MatchingPattern ;
    rdfs:range rdf:Property ;
    rdfs:comment """
    Describes the property allowing access to the object to be compared for the MatchingPattern in question.
    """@en .

:patternPropertyChain a owl:ObjectProperty ;
    rdfs:domain :MatchingPattern ;
    rdfs:range rdf:List ;
    rdfs:comment """
    Describes a list of properties (exactly as it could be expressed in a owl:propertyChainAxiom)
    allowing access to the object to be compared for the MatchingPattern in question."""@en .

:patternPropertyLiteral a owl:DatatypeProperty ;
    rdfs:domain :MatchingPattern ;
    rdfs:range xsd:string ;
    rdfs:comment """
    This class is only used internaly by CoViKoa (to store a rewrote patternProperty(Chain), see org/me/CoViKoa/RulesGenerator.java)
    and should not be used directly when writing the Derivation Model."""@en .

:hasConditionFilter a owl:ObjectProperty ;
    rdfs:domain symb:Symbol ;
    rdfs:range :ConditionFilter ;
    rdfs:comment """
    This is how we define a ConditionFilter on a subclass of gviz:GeoVisualIntermediateRepresentation in the Derivation Model."""@en .

:pathFromGVA a owl:ObjectProperty ;
    rdfs:range rdf:List ;
    rdfs:comment """
    This property is intended to be used when writing the derivation model
    (on new classes that subclass gviz:GeoVisualIntermediateRepresentation)."""@en .

:hasDefaultExtent a owl:ObjectProperty ;
    rdfs:comment """
    Allows to describe the default extent of a gviz:GeoVisualComponent by referencing the concept from the SDM from
    which it must use the geometry (if many individuals are encountered it will use the total extent of all the individuals).

    This property is intended to be used when writing the derivation model."""@en .

:onValidScale a owl:ObjectProperty ;
    rdfs:domain symb:Symbol ;
    rdfs:range scale:Scale ;
    rdfs:comment """Describe the scale of validity of the symbolisers linked to a Symbol.

    This property is intended to be used when writing the derivation model."""@en .

:hasLabelOnProperty a owl:ObjectProperty ;
    rdfs:domain symblzr:TextSymbolizer ;
    rdfs:comment """
    Describe the property or the list of properties that links to the string to be used as a Label for a given TextSymboliser.

    This property is intended to be used when writing the derivation model"""@en .

:transformOperation a owl:ObjectProperty ;
    rdfs:comment """
        Describe an operation that have to be applied to the geometry of the Feature
        to which a suggested portrayal is being added in order to produce a new geometry
        (so that it is this new geometry that is used in the portrayal in question).
        The literal representation of the Geometry in question is already bound to the variable `?thisGeometry`.

        This property is intended to be used when writing the Derivation Model (on new classes that subclass gviz:GeoVisualIntermediateRepresentation).
    """@en .

#################################################################
#    Data Properties
#################################################################

:pathFromGVALiteral a owl:DatatypeProperty ;
    rdfs:comment """This property is not intended to be used when writing the Derivation Model and is only used internally."""@en ;
    rdfs:range xsd:string .

:preTransformOperation a owl:DatatypeProperty ;
    rdfs:comment """
        Allows to bind a value of interest to a variable to be used later in the :transformOperation,
        likely to select the literal value of the geometry of a specific individual to be used in the transformation.

        This property is intended to be used when writing the Derivation Model (on new classes that subclass gviz:GeoVisualIntermediateRepresentation).
    """@en ;
    rdfs:range xsd:string .

:transformOperationLiteral a owl:DatatypeProperty ;
    rdfs:comment """
    This class is only used internaly by CoViKoa (to store a rewrote transformOperation, see org/me/CoViKoa/RulesGenerator.java)
    and should not be used directly when writing the Derivation Model."""@en .

:value a owl:DatatypeProperty ;
    rdfs:comment """
        Allows to describe a literal value to be used when using
        the function expressions syntax expected to define transformOperations.
        Typically this allow to pass a constant value as parameter to the function,
        such as `"POLYGON ((...))"^^geo:wktLiteral`.

        This property is intended to be used when writing the derivation model."""@en .

:variable a owl:DatatypeProperty ;
    rdfs:range xsd:string ;
    rdfs:comment """
        Allows to define a variable name to be used when using
        the function expressions syntax expected to define transformOperations.
        Typically this allow to pass either `"?thisGeometry" (because it is bound to the
        geometry of the individual we are spoking about) or another variable name
        previously bound using `cvkr:preTransformOperation`.

        This property is intended to be used when writing the derivation model."""@en .
